
<head><title>PHP PreparedStatement example</title></head>
<body>

<?php

include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

$dataPoints = array();


//Prepare a statement that we can later execute. The ?'s are placeholders for
//parameters whose values we will set before we run the query
if ($stmt = $conn->prepare(
      "WITH oldData AS (SELECT * ".
      "FROM State_cases ".
      "WHERE date LIKE '%2021-12%') ".
      
      ",newData AS (SELECT * ".
      "FROM State_cases ".
      "WHERE date LIKE '%2022-01%') ".
        
      ",CaseChange AS (SELECT O.state, N.confirmed - O.confirmed AS caseChange ".
      "FROM  oldData AS O JOIN newData as N ON O.state = N.state) ".
        
      "SELECT C.state, CAST(C.caseChange/S.population*100 AS DECIMAL(5,2)) AS changeRatio ".
      "FROM CaseChange AS C JOIN States AS S ON C.state = S.name;")) {


   echo "<h2>Finds the Percentage of Each State's Population that Tested Positive in the First Week of 2022</h2>";

   if ($stmt->execute()) {

      //echo "Finding the administered vaccine count of 65 and older over total vaccine count for each state ... <br>";

      //Store result set generated by the prepared statement
      $result = $stmt->get_result();

      //Call function defined above to create html output
      //displayItems($result);

      while ($row = $result->fetch_row()) {
      	array_push($dataPoints, array( "y"=> $row[1], "label"=> $row[0]));
      }
      //print_r($dataPoints);
      //We are done with the result set returned above, so free it
      //before we try to call prepared statement again
      $result->free_result();
      
   } else {
      echo "First execute failed.<br>";
   }

   //Output some blank space
   echo "<br><br>";

   //Close down the prepared statement
   $stmt->close();

} else {

    //A problem occurred when preparing the statement; check for syntax errors
    //and misspelled attribute names in the statement string.
    $error = $conn->errno . ' ' . $conn->error;
    echo $error; 
}


//Close the connection created in open.php
$conn->close();
?>
</body>


<html>
<head>  
<script>
window.onload = function () {
	
var chart = new CanvasJS.Chart("chartContainer", {
	animationEnabled: true,
	
	title:{
	},
	data: [{
		type: "column",
		name: "name",
		axisYType: "secondary",
		color: "#014D65",
		dataPoints: <?php echo json_encode($dataPoints, JSON_NUMERIC_CHECK); ?>	
	}]
	});
	chart.render();

}
</script>
</head>
<body>
	<div id="chartContainer" style="height: 370px; width: 100%;"></div>
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>